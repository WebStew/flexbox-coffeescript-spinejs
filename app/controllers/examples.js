// Generated by CoffeeScript 1.7.1
var Examples, ORM, Spine, view,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Spine = require('spine');

ORM = require('orm');

view = require('views/example');

Examples = (function(_super) {
  __extends(Examples, _super);

  Examples.include(ORM.state);

  function Examples() {
    Examples.__super__.constructor.apply(this, arguments);
    this.view = view;
    this.html(this.view);
  }

  Examples.prototype.el = '#examples';

  Examples.prototype.events = {
    'change select': 'setDeclaration'
  };

  Examples.prototype.elements = {
    '.flex': 'parent',
    '.flex-box-child': 'child'
  };

  Examples.prototype.setDeclaration = function(e) {
    var current, declaration, select, target, update;
    select = $(e.currentTarget);
    declaration = select.data('declaration');
    target = select.hasClass('flex-select-parent') ? this.parent : this.child;
    current = target.css(declaration);
    update = select.val();
    target.addClass(declaration + '-' + update).removeClass(declaration + '-' + current);
    return this.el.find('.code--' + declaration).text(update);
  };

  return Examples;

})(Spine.Controller);

module.exports = Examples;
